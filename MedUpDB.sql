
DROP TABLE POKE_INVOICE PURGE;
DROP TABLE APPOINTMENTS PURGE;
DROP TABLE PROCEDURES PURGE;
DROP TABLE PATIENTS PURGE;
DROP TABLE DOCTORS PURGE;

--SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'PROCEDURES';


------------- Trigger script----------------
CREATE OR REPLACE TRIGGER trigger_name
  BEFORE INSERT ON table_name
  FOR EACH ROW
BEGIN
  SELECT name_of_sequence.nextval
    INTO :new.primary_key_column
    FROM dual;
END;

-------------------------------------


CREATE TABLE PATIENTS
(   
    PATIENT_ID  NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    POKEMON       CHAR(25)    NOT NULL,
    REGION      VARCHAR(25)   NOT NULL,
    EMAIL       VARCHAR(25)   NOT NULL,
    TRAINER     VARCHAR(25)   NOT NULL,
    CONSTRAINT PATIENT_ID PRIMARY KEY (PATIENT_ID)
);

CREATE TABLE DOCTORS
(
    DOCTOR_ID       NUMBER GENERATED ALWAYS AS IDENTITY( START WITH 100 INCREMENT BY 25),
    DOCTOR          CHAR(25)    NOT NULL,
    TITLE           VARCHAR(20) NOT NULL,
    DEPARTMENT      VARCHAR(25) NOT NULL,
    CONSTRAINT DOCTOR_ID PRIMARY KEY (DOCTOR_ID)
);

CREATE TABLE APPOINTMENTS
(
    APPOINTMENT_ID  NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
        CONSTRAINT APPOINTMENT_ID PRIMARY KEY (APPOINTMENT_ID),
    APPOINTMENT_DATE           DATE    NOT NULL,
    PATIENT_ID     NUMBER   NOT NULL,
        CONSTRAINT PATIENT_ID_FK FOREIGN KEY (PATIENT_ID) REFERENCES PATIENTS,
    DOCTOR_ID      NUMBER NOT NULL,
        CONSTRAINT DOCTOR_ID_FK  FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTORS
);

--ALTER TABLE APPOINTMENTS DROP CONSTRAINT SYS_C00299567;

CREATE TABLE PROCEDURES 
(
    PROCEDURE_ID   NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1000 INCREMENT BY 10),
        CONSTRAINT PROCEDURE_ID PRIMARY KEY (PROCEDURE_ID),
    DETAIL         VARCHAR(50) NOT NULL,
    PRICE          NUMBER(10)  NOT  NULL
);


CREATE TABLE POKE_INVOICE 
(   INVOICE_NUMBER    NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 500 INCREMENT BY 1),
        CONSTRAINT INVOICE_NUMBER PRIMARY KEY (INVOICE_NUMBER),
    APPOINTMENT_ID    NUMBER  NOT NULL,
        CONSTRAINT APPOINTMENT_ID_FK FOREIGN KEY (APPOINTMENT_ID) REFERENCES APPOINTMENTS,
    PROCEDURE_ID      NUMBER(5)  NOT NULL,
        CONSTRAINT PROCEDURE_ID_FK FOREIGN KEY (PROCEDURE_ID) REFERENCES PROCEDURES
);

/**
PATIENTS 
**/
SELECT * 
FROM PATIENTS;


INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Charazard', 'Kanto', 'BojoDoeHoe@gmail.com', 'Bojo');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Gengar', 'Joto', 'Kalopez@gmail.com', 'Yunii');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('NineTails', 'Soho', 'RedOne@gmail.com', 'Roja');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Snorlax', 'Soho', 'MuyMuyLoko@gmail.com', 'Loko');

INSERT INTO PATIENTS ( POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Gastly', 'Orange Ils', 'MRimmer@gmail.com', 'Rimrim');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Raichu', 'Joto', 'Sleeper11@gmail.com', 'Jimmy');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Chicorita', 'Kansai', 'S4Lkokon@gmail.com', 'Maui');

INSERT INTO PATIENTS ( POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Totodile', 'Kanto', 'LtLambsworth999@gmail.com', 'Lamby');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Donphan', 'Joto', 'Munios22@gmail.com', 'HkLopez');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Nidoqueen', 'Soho', 'Rqueen@gmail.com', 'Rara');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('pidgy', 'joto', 'jimmbo@gmail.com', 'Jimmy');

INSERT INTO PATIENTS ( POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Mr.Mime', 'Orange Ils', 'Snipper33@gmail.com', 'Leslie');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Ratacate', 'Kanto', 'Chomper1@gmail.com', 'Bucky');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Kadabra', 'Kansai', 'psych1@gmail.com', 'Sabrina');

INSERT INTO PATIENTS ( POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Victorybell', 'Kanto', 'fushagym@gmail.com', 'Koga');

INSERT INTO PATIENTS (POKEMON, REGION, EMAIL, TRAINER)
VALUES ('Dragoair', 'Joto', 'nanaseta@gmail.com', 'Nannette');

/**
    DOCTORS 
**/

SELECT *
FROM DOCTORS

INSERT INTO DOCTORS ( DOCTOR, TITLE, DEPARTMENT)
VALUES (' Alegra Joy ', ' Nurse ',' Pokemon Medicine');

INSERT INTO DOCTORS ( DOCTOR, TITLE, DEPARTMENT)
VALUES (' Nurse Chansey ', ' Medical Assistant',' Pokemon Pharmacology ');

INSERT INTO DOCTORS ( DOCTOR, TITLE, DEPARTMENT)
VALUES (' Micheal Proctor ', ' Toxicology ',' Pokemon Toxicology ');

INSERT INTO DOCTORS ( DOCTOR, TITLE, DEPARTMENT)
VALUES (' Ed Degrauw ', ' Pedetritian ',' Pokemon Medicine ');

INSERT INTO DOCTORS ( DOCTOR, TITLE, DEPARTMENT)
VALUES (' Kornillous Yunifur ', ' Neurology ',' Pokemon Medicine ');

INSERT INTO DOCTORS ( DOCTOR, TITLE, DEPARTMENT)
VALUES (' Josie VonLeo ', ' Physical Therapy ',' Pokemon Medicine ');


/**
appointment
**/

SELECT *
FROM APPOINTMENTS;

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( TO_DATE('03/21/2018', 'MM/DD/YYYY'), 1, 100);

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES(TO_DATE('03/25/2018', 'MM/DD/YYYY'), 3, 125);

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES(TO_DATE('03/29/2018', 'MM/DD/YYYY'), 4, 150);

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES(TO_DATE('01/30/2018', 'MM/DD/YYYY'), 15, 175);

INSERT INTO APPOINTMENTS(APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES(TO_DATE('04/11/2018', 'MM/DD/YYYY'), 14, 200);

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( TO_DATE('04/04/2018', 'MM/DD/YYYY'), 13, 225);

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( TO_DATE('05/21/2018', 'MM/DD/YYYY'), 12, 100);

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES(TO_DATE('02/25/2018', 'MM/DD/YYYY'), 6, 125);

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES(TO_DATE('04/29/2018', 'MM/DD/YYYY'), 3, 150);

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES(TO_DATE('03/30/2018', 'MM/DD/YYYY'), 5, 175);

INSERT INTO APPOINTMENTS(APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES(TO_DATE('05/11/2018', 'MM/DD/YYYY'), 7, 200);

INSERT INTO APPOINTMENTS( APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( TO_DATE('02/13/2018', 'MM/DD/YYYY'), 2, 225);
/**
procedures
**/
SELECT *
FROM PROCEDURES 

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES (' MRI ', 1550);

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES ( ' CAT SCAN ', 1450);

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES (' COUGH SYRUP ', 150);

INSERT INTO PROCEDURES(DETAIL, PRICE)
VALUES (' FULL HEAL SPRAY ', 200);

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES (' STICHES',  330);

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES (' BROKEN BONE ', 450);

INSERT INTO PROCEDURES(DETAIL, PRICE)
VALUES (' MEASLES VACINE ', 550);

INSERT INTO PROCEDURES( DETAIL, PRiCE)
VALUES (' POKEPOX VACINE ', 850);

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES (' SPINAL TAP ', 2000);

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES (' FULL RESTORE ', 550);

INSERT INTO PROCEDURES(DETAIL, PRICE)
VALUES ( ' X-RAY ', 1200);

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES (' EGG EXTRACTION ', 3600);

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES (' TONSIL REMOVAL ', 5750);

INSERT INTO PROCEDURES( DETAIL, PRICE)
VALUES ( ' POKE BOOSTER SHOT ', 1200);


/**
INVOICE 
**/
SELECT * 
FROM POKE_INVOICE


INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 1, 1010);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 2, 1000);


INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 3, 1020);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 4, 1030);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 5, 1040);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 6, 1050);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 7, 1060);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 8, 1070);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 9, 1080);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 10, 1090);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 11, 1100);

INSERT INTO POKE_INVOICE ( APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 12, 1110);








/**
TRANSACTION THAT INSERTS NEW PATIENT INTO DATABASE
**/

SET SERVEROUTPUT ON;


DECLARE 

    InPOKEMON    CHAR(25) := &InPOKEMON;
   -- InREGION     VARCHAR(25) := &InREGION;
   -- InEMAIL      VARCHAR(25) := &InEMAIL;
   -- InTRAINER    VARCHAR(25) := &InTRAINER;
    v_FLAG       CHAR(1) := 'N';
    
    vPOKEMON    CHAR(25);
    
    
     INVALID_ENTRY EXCEPTION;
    vMessage     VARCHAR(50);
   
BEGIN
        DBMS_OUTPUT.PUT_LINE('FIRST BLOCK EXCECUTED');
    BEGIN
        
        SELECT POKEMON
        INTO VPOKEMON
        FROM PATIENTS
        WHERE InPOKEMON = PATIENTS.POKEMON;
        
        DBMS_OUTPUT.PUT_LINE(' FOUND ');
    
 
        vMessage := ' New patient entered into system. ';
        DBMS_OUTPUT.PUT_LINE(vMessage);
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
            RAISE INVALID_ENTRY;
        END;
    

EXCEPTION 
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('NO DATA FOUND');
    
    WHEN INVALID_ENTRY THEN
    DBMS_OUTPUT.PUT_LINE('INVALID ENTRY');
    
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/


/** TRANSACTION TO ADD APPOINTMENT
**/

/**DECLARE 
    InPATIENT_ID NUMBER(5) := &1;
    InDate       DATE      := &2
    InDOCTOR_ID  NUMBER(5) := &3;
    
    
    vPOKEMON    CHAR(25);
    vPATIENT_ID NUMBER(5);
    vMessage    VARCHAR(50);
    vERROR      VARCHAR(50);
    vFLAG       CHAR(3) := 'NO';
    
    vINVALID    EXCEPTION;

BEGIN
    BEGIN
        SELECT POKEMON
        INTO   vPOKEMON
        FROM   PATIENTS
        WHERE PATIENT_ID = InPATIENT_ID;
        DBMS_OUTPUT.PUT_LINE('Patient ' || vPATIENT || ' has been locatd.');
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        RAISE vINVALID;
    END;
    
    BEGIN
        SELECT DOCTOR
        INTO   vDOCTOR
        FROM   DOCTORS
        WHERE  DOCTOR_ID = InDOCTOR_ID;
        DBMS_OUTPUT.PUT_LINE('Doctor ' || vDOCTOR || ' has been located.' );
    EXCEPTION 
        WHEN NO_DATE_FOUND THEN
        RAISE vINVALID;
    END;
        
        
    BEGIN
        INSERT INTO APPOINTMENTS (APPOINTMENT_ID, APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
        VALUES (SELECT MAX(APPOINTMENT_ID)+1 FROM APPOINTMENTS, InDate, InPATIENT_ID, InDOCTOR_ID);
    
    EXCEPTION 
    
    END;
    
    
EXCEPTION 
    vERROR = ' No matching patient id. ';
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE(vERROR);
END; 