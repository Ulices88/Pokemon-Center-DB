
DROP TABLE POKE_INVOICE PURGE;
DROP TABLE APPOINTMENTS PURGE;
DROP TABLE PROCEDURES PURGE;
DROP TABLE PATIENTS PURGE;
DROP TABLE DOCTORS PURGE;

--SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'PROCEDURES';

CREATE TABLE PATIENTS
(   
    PATIENT_ID  NUMBER (5)    NOT NULL,
    POKEMON       CHAR(25)    NOT NULL,
    REGION      VARCHAR(25)   NOT NULL,
    EMAIL       VARCHAR(25)   NOT NULL,
    TRAINER     VARCHAR(25)   NOT NULL,
    CONSTRAINT PATIENT_ID PRIMARY KEY (PATIENT_ID)
);

CREATE TABLE DOCTORS
(
    DOCTOR_ID       NUMBER(5)   NOT NULL,
    DOCTOR          CHAR(25)    NOT NULL,
    TITLE           VARCHAR(20) NOT NULL,
    DEPARTMENT      VARCHAR(25) NOT NULL,
    CONSTRAINT DOCTOR_ID PRIMARY KEY (DOCTOR_ID)
);

CREATE TABLE APPOINTMENTS
(
    APPOINTMENT_ID  NUMBER(5)  NOT NULL PRIMARY KEY,
    APPOINTMENT_DATE           DATE       NOT NULL,
    PATIENT_ID     NUMBER(5)   NOT NULL,
        CONSTRAINT PATIENT_ID_FK FOREIGN KEY (PATIENT_ID) REFERENCES PATIENTS,
    DOCTOR_ID      NUMBER(5) NOT NULL,
        CONSTRAINT DOCTOR_ID_FK  FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTORS
);

--ALTER TABLE APPOINTMENTS DROP CONSTRAINT SYS_C00299567;

CREATE TABLE PROCEDURES 
(
    PROCEDURE_ID   NUMBER(10) NOT NULL,
        CONSTRAINT PROCEDURE_PK PRIMARY KEY (PROCEDURE_ID),
    DETAIL         VARCHAR(50) NOT NULL,
    PRICE          NUMBER(10)  NOT  NULL
);


CREATE TABLE POKE_INVOICE 
(   INVOICE_NUMBER    NUMBER(5)  NOT NULL PRIMARY KEY,
    APPOINTMENT_ID    NUMBER(5)  NOT NULL,
        CONSTRAINT APPOINTMENT_ID_FK  FOREIGN KEY (APPOINTMENT_ID) REFERENCES APPOINTMENTS,
    PROCEDURE_ID      NUMBER(5)  NOT NULL,
        CONSTRAINT PROCEDURE_ID_FK FOREIGN KEY (PROCEDURE_ID) REFERENCES PROCEDURES
);

/**
PATIENTS 
**/

INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
VALUES ( 1, 'Charazard', 'Kanto', 'BojoDoeHoe@gmail.com', 'Bojo');

INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
VALUES ( 2, 'Gengar', 'Joto', 'Kalopez@gmail.com', 'Yunii');

INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
VALUES ( 3, 'NineTails', 'Soho', 'RedOne@gmail.com', 'Roja');

INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
VALUES ( 4, 'Snorlax', 'Soho', 'MuyMuyLoko@gmail.com', 'Loko');

INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
VALUES ( 5, 'Gastly', 'Orange Ils', 'MRimmer@gmail.com', 'Rimrim');

INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
VALUES ( 6, 'Raichu', 'Joto', 'Sleeper11@gmail.com', 'Jimmy');

INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
VALUES ( 7, 'Chicorita', 'Kansai', 'S4Lkokon@gmail.com', 'Maui');

INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
VALUES ( 8, 'Totodile', 'Kanto', 'LtLambsworth999@gmail.com', 'Lamby');

INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
VALUES ( 9, 'Donphan', 'Joto', 'Munios22@gmail.com', 'HkLopez');

/**
    DOCTORS 
**/

INSERT INTO DOCTORS (DOCTOR_ID, DOCTOR, TITLE, DEPARTMENT)
VALUES ( 100, ' Alegra Joy ', ' Nurse ',' Pokemon Medicine');

INSERT INTO DOCTORS (DOCTOR_ID, DOCTOR, TITLE, DEPARTMENT)
VALUES ( 101, ' Chansey ', ' Medical Assistant',' Pokemon Pharmacology ');

INSERT INTO DOCTORS (DOCTOR_ID, DOCTOR, TITLE, DEPARTMENT)
VALUES ( 102, ' Micheal Proctor ', ' Toxicology ',' Pokemon Toxicology ');

INSERT INTO DOCTORS (DOCTOR_ID, DOCTOR, TITLE, DEPARTMENT)
VALUES ( 103, ' Ed Degrauw ', ' Pedetritian ',' Pokemon Medicine ');

INSERT INTO DOCTORS (DOCTOR_ID, DOCTOR, TITLE, DEPARTMENT)
VALUES ( 104, ' Yunifur Kornillous ', ' Neurology ',' Pokemon Medicine ');

INSERT INTO DOCTORS (DOCTOR_ID, DOCTOR, TITLE, DEPARTMENT)
VALUES ( 105, ' Josie Von ', ' Physical Therapy ',' Pokemon Medicine ');


/**
appointment
**/

INSERT INTO APPOINTMENTS( APPOINTMENT_ID, APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( 01, TO_DATE('03/21/2018', 'MM/DD/YYYY'), 1, 101);

INSERT INTO APPOINTMENTS( APPOINTMENT_ID, APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( 02, TO_DATE('03/25/2018', 'MM/DD/YYYY'), 3, 102);

INSERT INTO APPOINTMENTS( APPOINTMENT_ID, APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( 03, TO_DATE('03/29/2018', 'MM/DD/YYYY'), 4, 103);

INSERT INTO APPOINTMENTS( APPOINTMENT_ID, APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( 04, TO_DATE('03/30/2018', 'MM/DD/YYYY'), 9, 102);

INSERT INTO APPOINTMENTS( APPOINTMENT_ID, APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( 05, TO_DATE('04/01/2018', 'MM/DD/YYYY'), 5, 105);

INSERT INTO APPOINTMENTS( APPOINTMENT_ID, APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
VALUES( 06, TO_DATE('04/01/2018', 'MM/DD/YYYY'), 8, 101);
/**
procedures
**/

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (12, ' MRI ', 1550);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (16, ' CAT SCAN ', 1450);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (17, ' COUGH SYRUP ', 150);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (22, ' FULL HEAL SPRAY ', 200);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (33, 'STICHES',  330);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (42, ' BROKEN BONE ', 450);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (44, ' MEASLES VACINE ', 550);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRiCE)
VALUES (54, ' POKEPOX VACINE ', 850);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (62, ' SPINAL TAP ', 200);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (74, ' FULL RESTORE ', 550);

INSERT INTO PROCEDURES( PROCEDURE_ID, DETAIL, PRICE)
VALUES (82, ' X-RAY ', 1200);

/**
INVOICE 
**/

INSERT INTO POKE_INVOICE (INVOICE_NUMBER, APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 1000, 01, 17);

INSERT INTO POKE_INVOICE (INVOICE_NUMBER, APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 1001, 02, 33);


INSERT INTO POKE_INVOICE (INVOICE_NUMBER, APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 1002, 03, 22);

INSERT INTO POKE_INVOICE (INVOICE_NUMBER, APPOINTMENT_ID, PROCEDURE_ID)
VALUES ( 1003, 04, 42);


SELECT * 
FROM DOCTORS

SELECT *
FROM  PATIENTS 

SELECT *
FROM PROCEDURES

SELECT *
FROM APPOINTMENTS

SELECT * 
FROM POKE_INVOICE



/**
TRANSACTION THAT INSERTS NEW PATIENT INTO DATABASE
**/

/**DECLARE 
    InPokemon    CHAR(25) := &Pokemon;
    InREGION     CHAR(25) := &Regon;
    InEMAIL      CHAR(25) := &Email;
    InTRAINER    CHAR(25) := &Trainer;
    
    vPATIENT_ID  NUMBER(5);
    vMessage     VARCHAR(50);
BEGIN
    
    
        SELECT NVL(MAX(PATIENT_ID),0)+1
        INTO   vPATIENT_ID
        FROM   PATIENTS;
    
    
    
        INSERT INTO PATIENTS (PATIENT_ID, POKEMON, REGION, EMAIL, TRAINER)
        VALUES (vPATIENT_ID, InPOKEMON, InREGION, InEMAIL, InTRAINER);
        
        vMessage := ' New patient entered into system. ';
        DBMS_OUTPUT.PUT_LINE(vMessage);
    

EXCEPTION 
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);

END;
/


/** TRANSACTION TO ADD APPOINTMENT
**/

/**DECLARE 
    InPATIENT_ID NUMBER(5) := &1;
    InDate       DATE      := &2
    InDOCTOR_ID  NUMBER(5) := &3;
    
    
    vPOKEMON    CHAR(25);
    vPATIENT_ID NUMBER(5);
    vMessage    VARCHAR(50);
    vERROR      VARCHAR(50);
    vFLAG       CHAR(3) := 'NO';
    
    vINVALID    EXCEPTION;

BEGIN
    BEGIN
        SELECT POKEMON
        INTO   vPOKEMON
        FROM   PATIENTS
        WHERE PATIENT_ID = InPATIENT_ID;
        DBMS_OUTPUT.PUT_LINE('Patient ' || vPATIENT || ' has been locatd.');
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        RAISE vINVALID;
    END;
    
    BEGIN
        SELECT DOCTOR
        INTO   vDOCTOR
        FROM   DOCTORS
        WHERE  DOCTOR_ID = InDOCTOR_ID;
        DBMS_OUTPUT.PUT_LINE('Doctor ' || vDOCTOR || ' has been located.' );
    EXCEPTION 
        WHEN NO_DATE_FOUND THEN
        RAISE vINVALID;
    END;
        
        
    BEGIN
        INSERT INTO APPOINTMENTS (APPOINTMENT_ID, APPOINTMENT_DATE, PATIENT_ID, DOCTOR_ID)
        VALUES (SELECT MAX(APPOINTMENT_ID)+1 FROM APPOINTMENTS, InDate, InPATIENT_ID, InDOCTOR_ID);
    
    EXCEPTION 
    
    END;
    
    
EXCEPTION 
    vERROR = ' No matching patient id. ';
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE(vERROR);
END; 